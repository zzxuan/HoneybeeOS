     1 00000000                                 [FORMAT "WCOFF"]
     2 00000000                                 [INSTRSET "i486p"]
     3 00000000                                 [OPTIMIZE 1]
     4 00000000                                 [OPTION 1]
     5 00000000                                 [BITS 32]
     6 00000000                                 	EXTERN	_init_gdtidt
     7 00000000                                 	EXTERN	_init_pic
     8 00000000                                 	EXTERN	_io_sti
     9 00000000                                 	EXTERN	_keyfifo
    10 00000000                                 	EXTERN	_fifo8_init
    11 00000000                                 	EXTERN	_mousefifo
    12 00000000                                 	EXTERN	_io_out8
    13 00000000                                 	EXTERN	_init_keyboard
    14 00000000                                 	EXTERN	_enable_mouse
    15 00000000                                 	EXTERN	_memtest
    16 00000000                                 	EXTERN	_memman_init
    17 00000000                                 	EXTERN	_memman_free
    18 00000000                                 	EXTERN	_init_palette
    19 00000000                                 	EXTERN	_shtctl_init
    20 00000000                                 	EXTERN	_sheet_alloc
    21 00000000                                 	EXTERN	_memman_alloc_4k
    22 00000000                                 	EXTERN	_sheet_setbuf
    23 00000000                                 	EXTERN	_init_screen8
    24 00000000                                 	EXTERN	_init_mouse_cursor8
    25 00000000                                 	EXTERN	_sheet_slide
    26 00000000                                 	EXTERN	_sheet_updown
    27 00000000                                 	EXTERN	_sprintf
    28 00000000                                 	EXTERN	_putfonts8_asc
    29 00000000                                 	EXTERN	_memman_total
    30 00000000                                 	EXTERN	_sheet_refresh
    31 00000000                                 	EXTERN	_io_cli
    32 00000000                                 	EXTERN	_fifo8_status
    33 00000000                                 	EXTERN	_fifo8_get
    34 00000000                                 	EXTERN	_mouse_decode
    35 00000000                                 	EXTERN	_boxfill8
    36 00000000                                 	EXTERN	_io_stihlt
    37 00000000                                 [FILE "bootpack.c"]
    38                                          [SECTION .data]
    39 00000000                                 LC0:
    40 00000000 28 25 64 2C 20 25 64 29 00      	DB	"(%d, %d)",0x00
    41 00000009                                 LC1:
    42 00000009 6D 65 6D 6F 72 79 20 25 64 4D   	DB	"memory %dMB   free : %dKB",0x00
       00000013 42 20 20 20 66 72 65 65 20 3A 
       0000001D 20 25 64 4B 42 00 
    43 00000023                                 LC3:
    44 00000023 5B 6C 63 72 20 25 34 64 20 25   	DB	"[lcr %4d %4d]",0x00
       0000002D 34 64 5D 00 
    45 00000031                                 LC4:
    46 00000031 28 25 33 64 20 25 33 64 29 00   	DB	"(%3d %3d)",0x00
    47 0000003B                                 LC2:
    48 0000003B 25 30 32 58 00                  	DB	"%02X",0x00
    49                                          [SECTION .text]
    50 00000000                                 	GLOBAL	_HariMain
    51 00000000                                 _HariMain:
    52 00000000 55                              	PUSH	EBP
    53 00000001 89 E5                           	MOV	EBP,ESP
    54 00000003 57                              	PUSH	EDI
    55 00000004 56                              	PUSH	ESI
    56 00000005 53                              	PUSH	EBX
    57 00000006 8D 9D FFFFFD24                  	LEA	EBX,DWORD [-732+EBP]
    58 0000000C 81 EC 000002FC                  	SUB	ESP,764
    59 00000012 E8 [00000000]                   	CALL	_init_gdtidt
    60 00000017 E8 [00000000]                   	CALL	_init_pic
    61 0000001C E8 [00000000]                   	CALL	_io_sti
    62 00000021 8D 85 FFFFFEA4                  	LEA	EAX,DWORD [-348+EBP]
    63 00000027 50                              	PUSH	EAX
    64 00000028 6A 20                           	PUSH	32
    65 0000002A 68 [00000000]                   	PUSH	_keyfifo
    66 0000002F E8 [00000000]                   	CALL	_fifo8_init
    67 00000034 8D 85 FFFFFE24                  	LEA	EAX,DWORD [-476+EBP]
    68 0000003A 50                              	PUSH	EAX
    69 0000003B 68 00000080                     	PUSH	128
    70 00000040 68 [00000000]                   	PUSH	_mousefifo
    71 00000045 E8 [00000000]                   	CALL	_fifo8_init
    72 0000004A 68 000000F9                     	PUSH	249
    73 0000004F 6A 21                           	PUSH	33
    74 00000051 E8 [00000000]                   	CALL	_io_out8
    75 00000056 83 C4 20                        	ADD	ESP,32
    76 00000059 68 000000EF                     	PUSH	239
    77 0000005E 68 000000A1                     	PUSH	161
    78 00000063 E8 [00000000]                   	CALL	_io_out8
    79 00000068 E8 [00000000]                   	CALL	_init_keyboard
    80 0000006D 8D 85 FFFFFD14                  	LEA	EAX,DWORD [-748+EBP]
    81 00000073 50                              	PUSH	EAX
    82 00000074 E8 [00000000]                   	CALL	_enable_mouse
    83 00000079 68 BFFFFFFF                     	PUSH	-1073741825
    84 0000007E 68 00400000                     	PUSH	4194304
    85 00000083 E8 [00000000]                   	CALL	_memtest
    86 00000088 68 003C0000                     	PUSH	3932160
    87 0000008D 89 85 FFFFFD00                  	MOV	DWORD [-768+EBP],EAX
    88 00000093 E8 [00000000]                   	CALL	_memman_init
    89 00000098 68 0009E000                     	PUSH	647168
    90 0000009D 68 00001000                     	PUSH	4096
    91 000000A2 68 003C0000                     	PUSH	3932160
    92 000000A7 E8 [00000000]                   	CALL	_memman_free
    93 000000AC 8B 85 FFFFFD00                  	MOV	EAX,DWORD [-768+EBP]
    94 000000B2 83 C4 24                        	ADD	ESP,36
    95 000000B5 2D 00400000                     	SUB	EAX,4194304
    96 000000BA 50                              	PUSH	EAX
    97 000000BB 68 00400000                     	PUSH	4194304
    98 000000C0 68 003C0000                     	PUSH	3932160
    99 000000C5 E8 [00000000]                   	CALL	_memman_free
   100 000000CA E8 [00000000]                   	CALL	_init_palette
   101 000000CF 0F BF 05 00000FF6               	MOVSX	EAX,WORD [4086]
   102 000000D6 50                              	PUSH	EAX
   103 000000D7 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   104 000000DE 50                              	PUSH	EAX
   105 000000DF FF 35 00000FF8                  	PUSH	DWORD [4088]
   106 000000E5 68 003C0000                     	PUSH	3932160
   107 000000EA E8 [00000000]                   	CALL	_shtctl_init
   108 000000EF 50                              	PUSH	EAX
   109 000000F0 89 85 FFFFFD0C                  	MOV	DWORD [-756+EBP],EAX
   110 000000F6 E8 [00000000]                   	CALL	_sheet_alloc
   111 000000FB 83 C4 20                        	ADD	ESP,32
   112 000000FE FF B5 FFFFFD0C                  	PUSH	DWORD [-756+EBP]
   113 00000104 89 C6                           	MOV	ESI,EAX
   114 00000106 E8 [00000000]                   	CALL	_sheet_alloc
   115 0000010B 0F BF 15 00000FF6               	MOVSX	EDX,WORD [4086]
   116 00000112 89 85 FFFFFD08                  	MOV	DWORD [-760+EBP],EAX
   117 00000118 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   118 0000011F 0F AF C2                        	IMUL	EAX,EDX
   119 00000122 50                              	PUSH	EAX
   120 00000123 68 003C0000                     	PUSH	3932160
   121 00000128 E8 [00000000]                   	CALL	_memman_alloc_4k
   122 0000012D 6A FF                           	PUSH	-1
   123 0000012F 89 85 FFFFFD04                  	MOV	DWORD [-764+EBP],EAX
   124 00000135 0F BF 05 00000FF6               	MOVSX	EAX,WORD [4086]
   125 0000013C 50                              	PUSH	EAX
   126 0000013D 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   127 00000144 50                              	PUSH	EAX
   128 00000145 FF B5 FFFFFD04                  	PUSH	DWORD [-764+EBP]
   129 0000014B 56                              	PUSH	ESI
   130 0000014C E8 [00000000]                   	CALL	_sheet_setbuf
   131 00000151 83 C4 20                        	ADD	ESP,32
   132 00000154 6A 63                           	PUSH	99
   133 00000156 6A 10                           	PUSH	16
   134 00000158 6A 10                           	PUSH	16
   135 0000015A 53                              	PUSH	EBX
   136 0000015B FF B5 FFFFFD08                  	PUSH	DWORD [-760+EBP]
   137 00000161 E8 [00000000]                   	CALL	_sheet_setbuf
   138 00000166 0F BF 05 00000FF6               	MOVSX	EAX,WORD [4086]
   139 0000016D 50                              	PUSH	EAX
   140 0000016E 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   141 00000175 50                              	PUSH	EAX
   142 00000176 FF B5 FFFFFD04                  	PUSH	DWORD [-764+EBP]
   143 0000017C E8 [00000000]                   	CALL	_init_screen8
   144 00000181 83 C4 20                        	ADD	ESP,32
   145 00000184 6A 63                           	PUSH	99
   146 00000186 53                              	PUSH	EBX
   147 00000187 BB 00000002                     	MOV	EBX,2
   148 0000018C E8 [00000000]                   	CALL	_init_mouse_cursor8
   149 00000191 6A 00                           	PUSH	0
   150 00000193 6A 00                           	PUSH	0
   151 00000195 56                              	PUSH	ESI
   152 00000196 FF B5 FFFFFD0C                  	PUSH	DWORD [-756+EBP]
   153 0000019C E8 [00000000]                   	CALL	_sheet_slide
   154 000001A1 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   155 000001A8 8D 48 F0                        	LEA	ECX,DWORD [-16+EAX]
   156 000001AB 89 C8                           	MOV	EAX,ECX
   157 000001AD 99                              	CDQ
   158 000001AE F7 FB                           	IDIV	EBX
   159 000001B0 89 85 FFFFFD10                  	MOV	DWORD [-752+EBP],EAX
   160 000001B6 0F BF 05 00000FF6               	MOVSX	EAX,WORD [4086]
   161 000001BD 8D 48 D4                        	LEA	ECX,DWORD [-44+EAX]
   162 000001C0 89 C8                           	MOV	EAX,ECX
   163 000001C2 99                              	CDQ
   164 000001C3 F7 FB                           	IDIV	EBX
   165 000001C5 50                              	PUSH	EAX
   166 000001C6 89 C7                           	MOV	EDI,EAX
   167 000001C8 FF B5 FFFFFD10                  	PUSH	DWORD [-752+EBP]
   168 000001CE FF B5 FFFFFD08                  	PUSH	DWORD [-760+EBP]
   169 000001D4 FF B5 FFFFFD0C                  	PUSH	DWORD [-756+EBP]
   170 000001DA 8D 5D C4                        	LEA	EBX,DWORD [-60+EBP]
   171 000001DD E8 [00000000]                   	CALL	_sheet_slide
   172 000001E2 83 C4 28                        	ADD	ESP,40
   173 000001E5 6A 00                           	PUSH	0
   174 000001E7 56                              	PUSH	ESI
   175 000001E8 FF B5 FFFFFD0C                  	PUSH	DWORD [-756+EBP]
   176 000001EE E8 [00000000]                   	CALL	_sheet_updown
   177 000001F3 6A 01                           	PUSH	1
   178 000001F5 FF B5 FFFFFD08                  	PUSH	DWORD [-760+EBP]
   179 000001FB FF B5 FFFFFD0C                  	PUSH	DWORD [-756+EBP]
   180 00000201 E8 [00000000]                   	CALL	_sheet_updown
   181 00000206 57                              	PUSH	EDI
   182 00000207 FF B5 FFFFFD10                  	PUSH	DWORD [-752+EBP]
   183 0000020D 68 [00000000]                   	PUSH	LC0
   184 00000212 53                              	PUSH	EBX
   185 00000213 E8 [00000000]                   	CALL	_sprintf
   186 00000218 83 C4 28                        	ADD	ESP,40
   187 0000021B 53                              	PUSH	EBX
   188 0000021C 6A 07                           	PUSH	7
   189 0000021E 6A 00                           	PUSH	0
   190 00000220 6A 00                           	PUSH	0
   191 00000222 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   192 00000229 50                              	PUSH	EAX
   193 0000022A FF B5 FFFFFD04                  	PUSH	DWORD [-764+EBP]
   194 00000230 E8 [00000000]                   	CALL	_putfonts8_asc
   195 00000235 68 003C0000                     	PUSH	3932160
   196 0000023A E8 [00000000]                   	CALL	_memman_total
   197 0000023F C1 AD FFFFFD00 14               	SHR	DWORD [-768+EBP],20
   198 00000246 C1 E8 0A                        	SHR	EAX,10
   199 00000249 89 04 24                        	MOV	DWORD [ESP],EAX
   200 0000024C FF B5 FFFFFD00                  	PUSH	DWORD [-768+EBP]
   201 00000252 68 [00000009]                   	PUSH	LC1
   202 00000257 53                              	PUSH	EBX
   203 00000258 E8 [00000000]                   	CALL	_sprintf
   204 0000025D 83 C4 28                        	ADD	ESP,40
   205 00000260 53                              	PUSH	EBX
   206 00000261 6A 07                           	PUSH	7
   207 00000263 6A 20                           	PUSH	32
   208 00000265                                 L18:
   209 00000265 6A 00                           	PUSH	0
   210 00000267 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   211 0000026E 50                              	PUSH	EAX
   212 0000026F FF B5 FFFFFD04                  	PUSH	DWORD [-764+EBP]
   213 00000275 E8 [00000000]                   	CALL	_putfonts8_asc
   214 0000027A FF B5 FFFFFD0C                  	PUSH	DWORD [-756+EBP]
   215 00000280 E8 [00000000]                   	CALL	_sheet_refresh
   216 00000285 83 C4 1C                        	ADD	ESP,28
   217 00000288                                 L2:
   218 00000288 E8 [00000000]                   	CALL	_io_cli
   219 0000028D 68 [00000000]                   	PUSH	_keyfifo
   220 00000292 E8 [00000000]                   	CALL	_fifo8_status
   221 00000297 68 [00000000]                   	PUSH	_mousefifo
   222 0000029C 89 C3                           	MOV	EBX,EAX
   223 0000029E E8 [00000000]                   	CALL	_fifo8_status
   224 000002A3 8D 04 18                        	LEA	EAX,DWORD [EAX+EBX*1]
   225 000002A6 5B                              	POP	EBX
   226 000002A7 5E                              	POP	ESI
   227 000002A8 85 C0                           	TEST	EAX,EAX
   228 000002AA 0F 84 000001DC                  	JE	L19
   229 000002B0 68 [00000000]                   	PUSH	_keyfifo
   230 000002B5 E8 [00000000]                   	CALL	_fifo8_status
   231 000002BA 59                              	POP	ECX
   232 000002BB 85 C0                           	TEST	EAX,EAX
   233 000002BD 0F 85 0000017F                  	JNE	L20
   234 000002C3 68 [00000000]                   	PUSH	_mousefifo
   235 000002C8 E8 [00000000]                   	CALL	_fifo8_status
   236 000002CD 5A                              	POP	EDX
   237 000002CE 85 C0                           	TEST	EAX,EAX
   238 000002D0 74 B6                           	JE	L2
   239 000002D2 68 [00000000]                   	PUSH	_mousefifo
   240 000002D7 E8 [00000000]                   	CALL	_fifo8_get
   241 000002DC 89 C3                           	MOV	EBX,EAX
   242 000002DE E8 [00000000]                   	CALL	_io_sti
   243 000002E3 0F B6 C3                        	MOVZX	EAX,BL
   244 000002E6 50                              	PUSH	EAX
   245 000002E7 8D 85 FFFFFD14                  	LEA	EAX,DWORD [-748+EBP]
   246 000002ED 50                              	PUSH	EAX
   247 000002EE E8 [00000000]                   	CALL	_mouse_decode
   248 000002F3 83 C4 0C                        	ADD	ESP,12
   249 000002F6 48                              	DEC	EAX
   250 000002F7 75 8F                           	JNE	L2
   251 000002F9 FF B5 FFFFFD1C                  	PUSH	DWORD [-740+EBP]
   252 000002FF FF B5 FFFFFD18                  	PUSH	DWORD [-744+EBP]
   253 00000305 68 [00000023]                   	PUSH	LC3
   254 0000030A 8D 5D C4                        	LEA	EBX,DWORD [-60+EBP]
   255 0000030D 53                              	PUSH	EBX
   256 0000030E E8 [00000000]                   	CALL	_sprintf
   257 00000313 83 C4 10                        	ADD	ESP,16
   258 00000316 8B 85 FFFFFD20                  	MOV	EAX,DWORD [-736+EBP]
   259 0000031C A9 00000001                     	TEST	EAX,1
   260 00000321 74 04                           	JE	L11
   261 00000323 C6 45 C5 4C                     	MOV	BYTE [-59+EBP],76
   262 00000327                                 L11:
   263 00000327 A9 00000002                     	TEST	EAX,2
   264 0000032C 74 04                           	JE	L12
   265 0000032E C6 45 C5 52                     	MOV	BYTE [-59+EBP],82
   266 00000332                                 L12:
   267 00000332 83 E0 04                        	AND	EAX,4
   268 00000335 74 04                           	JE	L13
   269 00000337 C6 45 C5 43                     	MOV	BYTE [-59+EBP],67
   270 0000033B                                 L13:
   271 0000033B 6A 1F                           	PUSH	31
   272 0000033D 68 00000097                     	PUSH	151
   273 00000342 6A 10                           	PUSH	16
   274 00000344 6A 20                           	PUSH	32
   275 00000346 6A 0E                           	PUSH	14
   276 00000348 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   277 0000034F 50                              	PUSH	EAX
   278 00000350 FF B5 FFFFFD04                  	PUSH	DWORD [-764+EBP]
   279 00000356 E8 [00000000]                   	CALL	_boxfill8
   280 0000035B 53                              	PUSH	EBX
   281 0000035C 6A 07                           	PUSH	7
   282 0000035E 6A 10                           	PUSH	16
   283 00000360 6A 20                           	PUSH	32
   284 00000362 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   285 00000369 50                              	PUSH	EAX
   286 0000036A FF B5 FFFFFD04                  	PUSH	DWORD [-764+EBP]
   287 00000370 E8 [00000000]                   	CALL	_putfonts8_asc
   288 00000375 8B 85 FFFFFD18                  	MOV	EAX,DWORD [-744+EBP]
   289 0000037B 03 BD FFFFFD1C                  	ADD	EDI,DWORD [-740+EBP]
   290 00000381 83 C4 34                        	ADD	ESP,52
   291 00000384 01 85 FFFFFD10                  	ADD	DWORD [-752+EBP],EAX
   292 0000038A 0F 88 000000A3                  	JS	L21
   293 00000390                                 L14:
   294 00000390 85 FF                           	TEST	EDI,EDI
   295 00000392 0F 88 00000094                  	JS	L22
   296 00000398                                 L15:
   297 00000398 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   298 0000039F 83 E8 10                        	SUB	EAX,16
   299 000003A2 39 85 FFFFFD10                  	CMP	DWORD [-752+EBP],EAX
   300 000003A8 7E 06                           	JLE	L16
   301 000003AA 89 85 FFFFFD10                  	MOV	DWORD [-752+EBP],EAX
   302 000003B0                                 L16:
   303 000003B0 0F BF 05 00000FF6               	MOVSX	EAX,WORD [4086]
   304 000003B7 83 E8 10                        	SUB	EAX,16
   305 000003BA 39 C7                           	CMP	EDI,EAX
   306 000003BC 7E 02                           	JLE	L17
   307 000003BE 89 C7                           	MOV	EDI,EAX
   308 000003C0                                 L17:
   309 000003C0 57                              	PUSH	EDI
   310 000003C1 FF B5 FFFFFD10                  	PUSH	DWORD [-752+EBP]
   311 000003C7 68 [00000031]                   	PUSH	LC4
   312 000003CC 53                              	PUSH	EBX
   313 000003CD E8 [00000000]                   	CALL	_sprintf
   314 000003D2 6A 0F                           	PUSH	15
   315 000003D4 6A 4F                           	PUSH	79
   316 000003D6 6A 00                           	PUSH	0
   317 000003D8 6A 00                           	PUSH	0
   318 000003DA 6A 0E                           	PUSH	14
   319 000003DC 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   320 000003E3 50                              	PUSH	EAX
   321 000003E4 FF B5 FFFFFD04                  	PUSH	DWORD [-764+EBP]
   322 000003EA E8 [00000000]                   	CALL	_boxfill8
   323 000003EF 83 C4 2C                        	ADD	ESP,44
   324 000003F2 53                              	PUSH	EBX
   325 000003F3 6A 07                           	PUSH	7
   326 000003F5 6A 00                           	PUSH	0
   327 000003F7 6A 00                           	PUSH	0
   328 000003F9 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   329 00000400 50                              	PUSH	EAX
   330 00000401 FF B5 FFFFFD04                  	PUSH	DWORD [-764+EBP]
   331 00000407 E8 [00000000]                   	CALL	_putfonts8_asc
   332 0000040C 57                              	PUSH	EDI
   333 0000040D FF B5 FFFFFD10                  	PUSH	DWORD [-752+EBP]
   334 00000413 FF B5 FFFFFD08                  	PUSH	DWORD [-760+EBP]
   335 00000419 FF B5 FFFFFD0C                  	PUSH	DWORD [-756+EBP]
   336 0000041F E8 [00000000]                   	CALL	_sheet_slide
   337 00000424 83 C4 28                        	ADD	ESP,40
   338 00000427 E9 FFFFFE5C                     	JMP	L2
   339 0000042C                                 L22:
   340 0000042C 31 FF                           	XOR	EDI,EDI
   341 0000042E E9 FFFFFF65                     	JMP	L15
   342 00000433                                 L21:
   343 00000433 C7 85 FFFFFD10 00000000         	MOV	DWORD [-752+EBP],0
   344 0000043D E9 FFFFFF4E                     	JMP	L14
   345 00000442                                 L20:
   346 00000442 68 [00000000]                   	PUSH	_keyfifo
   347 00000447 E8 [00000000]                   	CALL	_fifo8_get
   348 0000044C 89 C3                           	MOV	EBX,EAX
   349 0000044E E8 [00000000]                   	CALL	_io_sti
   350 00000453 53                              	PUSH	EBX
   351 00000454 8D 5D C4                        	LEA	EBX,DWORD [-60+EBP]
   352 00000457 68 [0000003B]                   	PUSH	LC2
   353 0000045C 53                              	PUSH	EBX
   354 0000045D E8 [00000000]                   	CALL	_sprintf
   355 00000462 6A 1F                           	PUSH	31
   356 00000464 6A 0F                           	PUSH	15
   357 00000466 6A 10                           	PUSH	16
   358 00000468 6A 00                           	PUSH	0
   359 0000046A 6A 0E                           	PUSH	14
   360 0000046C 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   361 00000473 50                              	PUSH	EAX
   362 00000474 FF B5 FFFFFD04                  	PUSH	DWORD [-764+EBP]
   363 0000047A E8 [00000000]                   	CALL	_boxfill8
   364 0000047F 83 C4 2C                        	ADD	ESP,44
   365 00000482 53                              	PUSH	EBX
   366 00000483 6A 07                           	PUSH	7
   367 00000485 6A 10                           	PUSH	16
   368 00000487 E9 FFFFFDD9                     	JMP	L18
   369 0000048C                                 L19:
   370 0000048C E8 [00000000]                   	CALL	_io_stihlt
   371 00000491 E9 FFFFFDF2                     	JMP	L2
